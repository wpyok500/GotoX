#coding:utf-8
#确保文件编码与以上相符、不要修改！
[注意]
#    1、选项赋值符号不是等号，而是任意空格或制表符加上等号［=］
#    2、当不设定选项值时，无需使用赋值符号
#    3、选项名称可以包含等号［=］，网址参数中有时会使用
#    4、选项名称不可以包含空格或制表符！！！网址中的空格是三个字符［%20］
#    5、你在浏览器地址栏看到的中文字符并不是实际的网址，千万不要将它直接写入规则
#       选项！！！请使用实际的网址字符串来匹配
#    6、［#］和［;］为注释符，在行内（非行首）使用时前面一定要有空格！！！
[配置说明]
#    *请按规则填写配置，程序基本上不会检测配置错误，后果自负！*
#    配置小节：
#        1、名称格式为［数字-动作名］
#        2、数字必须唯一，代表匹配顺序，与小节排序无关，没有数字则不匹配此小节
#        3、可以有多个相同动作不同数字顺序的配置小节
#        4、配置小节内的规则选项是从上到下顺序匹配的
#        5、同一配置小节内的规则选项必须唯一，只要有一点差别就可以
#    规则选项：
#        1、选项名称最多由三部分，最少由一部分（不能是协议）组成：
#               [协议://][[@]主机名][/[@]路径]
#          ［://］是协议结尾，［/］是路径开头，［@］代表使用正式表达式
#        2、三部分会分别匹配，省略部分代表匹配该部分所有可能
#        3、主机名和路径是否使用正式表达式要分别用［@］标识出来
#        4、不使用正式表达式时，主机名按域名规则匹配：
#           点在前面，从结尾匹配主机名［.com］不匹配［www.abc.com.cn］
#           点在后面，从开头匹配主机名［abc.］不匹配［www.abc.com］
#           点在中间，须完全匹配主机名［abc.com］不匹配［www.abc.com］
#           不包含点，任意匹配整个主机名［xxx］
#        5、匹配路径时，由于已经有［/］开头，第一个匹配的字符不再是［/］
#        6、匹配加密链接且当前动作会伪造证书时，主机名应尽量明确，范围不要过大
#        7、不伪造证书无法匹配加密链接的路径部分
#        8、主机名中不能出现端口号以及不能使用在主机名中的字符
#        9、单独一个［/］可以匹配所有链接，不建议直接使用。可在主配置分别设定
#           http 和 https 的默认动作
#    重定向规则：
#        1、填写完整的重定向地址，或者
#        2、搜索替换，以［>>］分割的字符串，后面替换前面
#        3、在［>>］之前的字符串前面使用［@］，表示使用正式表达式替换
#        4、正式表达式可以使用括号［()］标识分组，按匹配顺序分配数字 id，也可以
#           在括号开头以［?P<name>］的格式分配名称，然后以［\id］、［\g<id>］或
#          ［\g<name>］引用分组，但不能使用编号 0
#        5、替换操作只执行一次！即使后面还有匹配也不会替换
#        6、对重定向结果进行解码，在［>>］后面、替换结果的前面使用［@］
#        7、当重定向结果无变化或错误时，会跳过此条规则继续往下匹配
#    内部重定向特有规则：
#        1、在重定向规则最前面使用［!］，表示不替换［Host］头部
#        2、在［>>］后面、替换结果的前面使用［forward|direct|gae|proxy=地址］+
#           ［空格］时，重定向结果忽略自动规则强制使用指定动作
#    伪造 SNI：
#        *仅［fakecert］适用*
#        1、直接填写替代的域名字符串
#        2、［*］，随机，默认生成方法
#        3、［*］作为通配符，限定部分随机
#        4、［*{n}］作为通配符，限定部分随机，可指定长度数字 n
#        5、［@none］不发送 SNI
#    IP 协议版本选择：
#        *仅［forward|direct］适用，受全局［link/profile］限制*
#        主要配合伪造 SNI 规则使用，在开头使用以下规则，以空格分隔
#        1、［@v4］，仅使用 IPv4 连接
#        2、［@v6］，仅使用 IPv6 连接
#    —————————————————————————————————————
#    | 动作       | 动作名    | 伪造 | 赋值
#    |——————+—————-+-证书-+————————————————————-
#    | 拦截       | block     |  是  | 无
#    | 转发／隧道 | forward   |  否  | 无／IP／主配置 IP 列表名称／域名，注1
#    | 代理直连   | direct    |  是  | 无／IP／主配置 IP 列表名称／域名，注1
#    | 伪造证书   | fakecert  |  是  | 无／SNI 规则，配合其它规则使用
#    | GAE 代理   | gae       |  是  | 无
#    | 其它代理   | proxy     |  否  | 协议://[用户名[:密码]@](主机名|ip):端口
#    | 重定向     | redirect  |  是  | 网址／重定向规则，注2
#    | 内部重定向 | iredirect |  是  | 网址／重定向规则，注3
#    —————————————————————————————————————
#    注1：可以用［|］分隔的多个 IP，起到类似系统 host 文件的作用；另外，对于某些
#         特殊状况和需求，可以填写其它域名用于解析，只能填写一个域名
#         小技巧：对于不支持 GAE 出口的网址，可在［转发］或［直连］规则中设置成
#                ［SNI 代理］即［反向代理］IP，反向代理一般不支持非加密链接
#    注2：必须注意不要让重定向结果循环匹配，可以重定向 http 来强制使用 https，
#         需服务器支持 https，不然会无法连接或循环重定向
#    注3：不返回 30X，直接在本代理内部处理，客户端无法察觉，可重定向到本地文件
#         （需以［file://］开头）
[首次使用建议]
#    先按自己的需求排列动作顺序，只需要改第一个数字（上面有说明）
#    每种动作只配置一个，后续再根据使用情况添加或分割配置
#    意思就是默认就很好，你只需要添加规则选项就行了，用段时间熟悉了再调整其它

[0-fakecert] #建议伪造证书排第一不要改动，配合需要匹配路径的加密链接
#<<<不要去除这条，不然某些 forward 规则无法正常工作
.google.
#>>>
#<<<此为伪造 SNI 示例，可以自行尝试能够工作的名称
.reddit.com = www.redditstatic.com
web.archive.org = web.archive.com
www.pixiv.net = www.pixiv.com
www.instagram.com = graph.cdninstagram.com
zh.wikipedia.org = en.wikipedia.org
@^github.+s3.amazonaws.com$ = s3-1-w.amazonaws.com
.github.io = *.github.io
facebook.com$ = @none
facebook.net$ = @none
.fbcdn.net = @none
.fbsbx.com = @none
.bbc.com = @none
.bbc.co.uk = @none
.bbci.co.uk = @none
tumblr.com$ = @none
#>>>

[1-forward] #转发，非 fakecert 连接由代理解析并连接后再转发，不支持复用连接
#<<<注意：不要在此规则前面加入匹配这两个域名的其它规则
appengine.google.com = google_gws #上传服务端
accounts.google.com = google_gws  #帐号验证
#>>>
#<<<google channel binding
.google.com//channel/bind? = google_gws
.google.com/^wc/channel = google_gws
#>>>

[2-direct] #代理直连（兼容性较好）
#<<< IP 协议规则示例
;使用其它域名解析
@^github.+s3.amazonaws.com$ = s3-1-w.amazonaws.com
;用于仅 IPv4 被封锁的域名
facebook.com$ = @v6
facebook.net$ = @v6
.fbcdn.net = @v6
.fbsbx.com = @v6
#>>>

[10-block] #返回空数据包

[20-iredirect] #内部重定向
#优酷示例规则、文件自备
#http://local.youku.com/loader.swf = file:///M:/Net/Palemoon/Lib/swf/loader.swf
#http://local.youku.com/player.swf = file:///M:/Net/Palemoon/Lib/swf/player.swf
#http:///@crossdomain\.xml$ = file:///M:/Net/Palemoon/Lib/swf/crossdomain.xml
#twitter search
twitter.com/^search = twitter.com >> mobile.twitter.com

[30-redirect] #重定向
#优酷示例规则，与上面配合使用
#http://@^(static|player|v)\.youku\. = @.+?(?:id|ID|embed)(?:_|/|S=)([^\./\&]+).* >> http://local.youku.com/loader.swf?VideoIDS=\1
#强制使用 https
http://pki. = @^http >> https
http://google = @^http >> https
http://youtube = @^http >> https
http://ytimg = @^http >> https
http://tumblr.com$ = @^http >> https
# google ipv4 sorry
ipv4.google.com/sorry = @.+continue=(.+)&q=.+ >> @\1
#<<<多线程下载时，如果某些线程速度太快已经结束，此时之后的线程尚未收到响应，当这个线程响应结果出错时会导致下载失败
#主动重定向节约时间，以减少下载失败机率
github.com/raw=true$ = @github.com(/[^/]+/[^/]+/)blob/(.+)\?.+ >> raw.githubusercontent.com\1\2
github.com/raw = @github.com(/[^/]+/[^/]+/)raw/ >> raw.githubusercontent.com\1
#>>>

[40-proxy] #转发到其它代理服务器

[50-gae] #通过 GAE 服务器代理
#<<<通过 GAE 才能正常使用的 google 服务
business.google.com
books.google.com
chrome.google.com
domains.google
.googlevideo.com
.google.com/videoplayback
golang.org
www.google.com/maps
www.google.com/patents
youtu.be$
#>>>
#<<<在线证书状态，如果使用 GAE 获取会影响正常工作，请自行注释掉这两条
#http://@^ocsp\d?\.
#clients1.google.com/ocsp
#>>>

[60-forward] #转发直连，即隧道代理
# github wss 协议，还可以配置为反向代理 IP 或其它后端代理
live.github.com
ipv6.
test-ipv6.com$
#cache.

[70-direct] #代理直连（兼容性较好）
# cn 规则跟随 goproxy
.gstatic.cn/ = google_cn
.doubleclick.net/ = google_cn
.google-analytics.com/ = google_cn
.google.cn/ = google_cn
.googlesyndication.com/ = google_cn
.googletagmanager.com/ = google_cn
.googletagservices.com/ = google_cn
csi.gstatic.com/ = google_cn
fonts.gstatic.com/ = google_cn
dl.google.com/ = google_cn
fonts.googleapis.com/ = google_cn

cloud.google.com = google_gws
.cloud.google.com = google_gws
@.*clients\d*\.google\.com = google_gws

.android.com = google_gws
appspot.com$ = google_gws
.doubleclick.net = google_gws
.ggpht.com = google_gws
goo.gl = google_gws
.goog.com = google_gws
.goog = google_gws
.google. = google_gws
.google.cn = google_gws
.google.co. = google_gws
.google.com = google_gws
.google.com. = google_gws
.googleapis.com = google_gws
.googleblog.com = google_gws
.googlecode.com = google_gws
.googlegroups.com = google_gws
.googlesource.com = google_gws
.googlesyndication.com = google_gws
.googletagmanager.com = google_gws
.googletagservices.com = google_gws
.googleusercontent.com = google_gws
.google-analytics.com = google_gws
.gstatic.com = google_gws
@\.gexperiments\d?\.com$ = google_gws
.youtube.com = google_gws
;youtu.be$ = google_gws
.youtube-nocookie.com = google_gws
.ytimg.com = google_gws
.chromium.org = google_gws
.chrome.com = google_gws
.tensorflow.org = google_gws
pki.goog = google_gws
.feedburner.com = google_gws

[80-gae] #通过 GAE 服务器代理
#.tw
twitter.com$
.twimg.com
